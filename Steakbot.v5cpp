{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n/*vex-vision-config:begin*/\nvision Vision3 = vision (PORT3, 50);\n/*vex-vision-config:end*/\ngps GPS2 = gps(PORT2, 0.00, 0.00, mm, 180);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// ----------------------------------------------------------------------------\n//                                                                            \n//    Project:  This part is irrelevant unless you want to                                             \n//    Author:   I'm going to take credit for my awesome comments - Aidan Mack B)\n//    Created:  10/13/2023, long time ago (maybe?)\n//    Configuration: Idk what this is for   \n//    Captain: Matti \n//    Captain (the real one): Calvin\n//    \"I don't have one\": Jia Chi\n//    \"The Best Programmer (allegedly)\": Aidan\n//                                                                            \n// ----------------------------------------------------------------------------\n// Include the V5 Library\n#include \"vex.h\"\n\n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// Put your variables and functions here!\n\n\n\n\nvex::motor      FrontRight(vex::PORT12, vex::gearSetting::ratio6_1, false);\nvex::motor      FrontLeft(vex::PORT10, vex::gearSetting::ratio6_1, true);\nvex::motor      BackRight(vex::PORT1, vex::gearSetting::ratio6_1, false);\nvex::motor      BackLeft(vex::PORT2, vex::gearSetting::ratio6_1, true);\nvex::motor      MidRight(vex::PORT7, vex::gearSetting::ratio6_1, false);\nvex::motor      MidLeft(vex::PORT15, vex::gearSetting::ratio6_1, true);\n\nmotor_group LeftDriveSmart = motor_group(FrontLeft, BackLeft, MidLeft);\nmotor_group RightDriveSmart = motor_group(FrontRight,BackRight, MidRight);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 307.34, 312.42, mm, 1);\n\nvex::controller controller1(vex::controllerType::primary);\n\n\n// Begin project code\n\nvoid preAutonomous(void) {\n\n  // actions to do when the program starts\n  // like gyro calibration and stuff\n\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"pre auton code\");\n  wait(1, seconds);\n}\n\nvoid autonomous(void) {\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"autonomous code\");\n\n// AUTONOMUS CODE YAYAYAYAYAYAY\n\n//set drive & turn speed\nDrivetrain.setDriveVelocity(75, percent);\nDrivetrain.setTurnVelocity(50, percent);\n\n//snap forward to drop intake spinner\nDrivetrain.driveFor(forward, 5, inches);\nDrivetrain.driveFor(reverse, 3, inches);\n\n//in position to dunk\nDrivetrain.driveFor(forward, 25, inches);\nDrivetrain.turnFor(left, 45, degrees);\nDrivetrain.driveFor(forward, 27, inches);\nDrivetrain.turnFor(right, 40, degrees);\n\n//get that ball outta here\nDrivetrain.driveFor(forward, 4, inches);\nDrivetrain.driveFor(reverse, 8, inches);\nDrivetrain.turnFor(right, 140, degrees);\n// Aidan says to use time for this part its better and smarter (just like Aidan)\nDrivetrain.driveFor(reverse, 10, inches);\nDrivetrain.driveFor(forward, 5, inches);\nDrivetrain.driveFor(reverse, 14, inches);\nDrivetrain.driveFor(forward, 15, inches);\n\n\n}\n\nvoid userControl(void) {\n  Brain.Screen.clearScreen();\n  // place driver control in this while loop\n  // this is where your main code goes, your old main goes inside of here.\n  while (true)\n  {\n\n      // this is the drive code\n        FrontLeft.spin(forward, controller1.Axis3.position(pct) + controller1.Axis4.position(pct)/1.7, pct);\n        BackLeft.spin(forward, controller1.Axis3.position(pct) + controller1.Axis4.position(pct)/1.7, pct);\n        MidLeft.spin(forward, controller1.Axis3.position(pct) + controller1.Axis4.position(pct)/1.7, pct);\n        //Right motor, vertical axis of left joystick minus horizontal axis of left joystick\n        FrontRight.spin(forward, controller1.Axis3.position(pct) - controller1.Axis4.position(pct)/1.7, pct);\n        BackRight.spin(forward, controller1.Axis3.position(pct) - controller1.Axis4.position(pct)/1.7, pct);\n        MidRight.spin(forward, controller1.Axis3.position(pct) - controller1.Axis4.position(pct)/1.7, pct);\n    \n  }\n}\n\nint main() {\n\n  //  MESS WITH THIS PART (unless you know what you're doing)\n\n  // create competition instance\n  competition Competition;\n\n  // Set up callbacks for autonomous and driver control periods.\n  Competition.autonomous(autonomous);\n  Competition.drivercontrol(userControl);\n\n  // Run the pre-autonomous function.\n  preAutonomous();\n\n  // Prevent main from exiting with an infinite loop.\n  while (true)\n  {\n    wait(100, msec);\n  }\n}\n\n// That's all folks! ","textLanguage":"cpp","robotConfig":[{"port":[3],"name":"Vision3","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_1\"},\"range\":2.5},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"}},{"port":[2],"name":"GPS2","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.3","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}